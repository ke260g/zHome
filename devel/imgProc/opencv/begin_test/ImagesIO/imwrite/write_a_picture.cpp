#include<opencv2/opencv.hpp>
#include<vector>
#include<iostream>
#include<stdexcept>
#include<cstdio>

using namespace cv;
using namespace std;

static void createAlphaMat(Mat & mat) {
    int i,
        j;
    for(i = 0; i < mat.rows; i++) {
        for(j = 0; j < mat.cols; j++) {
            Vec4b & rgba = mat.at<Vec4b>(i, j);
            rgba[0] = UCHAR_MAX;
            rgba[1] = saturate_cast<uchar>(((float)mat.cols - j) / (float)mat.cols * UCHAR_MAX);
            rgba[2] = saturate_cast<uchar>(((float)mat.rows - i) / (float)mat.rows * UCHAR_MAX);
            rgba[3] = saturate_cast<uchar>(0.5 * (rgba[1] + rgba[2]));
        }
    }
}

int main(int argc, char **argv) {
    /* create an alpha Mat */
    Mat mat(480, 640, CV_8UC4);
    createAlphaMat(mat);
    vector<int>compression_params;
    compression_params.push_back(CV_IMWRITE_PNG_COMPRESSION);
    compression_params.push_back(9);
    try {
        imwrite("transparent_alpha_image.png", mat, compression_params);
        imshow("Generated png image", mat);
        fprintf(stdout, "alpha data of png image file has been saved\n"
                "you can check the image generated by imwrite() in the project directory\n");
        waitKey();
    }
    catch(runtime_error & ex) {
        fprintf(stderr, "error occurs when convert image to png format %s\n", ex.what());
        return 1;
    }

    return 0;
}
