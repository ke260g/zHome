scriptencoding utf-8 " must be at the start of this file
set langmenu=en
set viminfo='20,\"500   " Keep a .viminfo file.
set encoding=utf-8
set termencoding=utf-8
set fileencodings=utf-8,gbk,latin1
"set suffixes+=.info,.aux,.log,.dvi,.bbl,.out,.o,.lo
set number
set foldmethod=syntax
"set smartindent
"set autoindent
"tab and space stuff
set expandtab "change tab to space
set shiftwidth=4
set softtabstop=4
set tabstop=4 " set ts=4
set ruler
set wildmenu
set nocompatible
set cursorcolumn
set cursorline
set ignorecase
set showcmd
set autochdir "conflict with vim-shell
set smartcase
set incsearch
set hlsearch
"set novisualbell
"set noerrorbells
set magic "set regex
set laststatus=2
set ambiwidth=double
syntax on
colorscheme molokai "desert
filetype indent on
filetype plugin on
set tags=tags;/
"-------------------------------------
"custom hotkey------------------------
"switch window
nnoremap mh <C-W>h
nnoremap mj <C-W>j
nnoremap mk <C-W>k
nnoremap ml <C-W>l
"resize window
nnoremap mmh <C-W>4>
nnoremap mml <C-W>4<
nnoremap mmk <C-W>4-
nnoremap mmj <C-W>4+
"tab-pages operate
nmap tt :tabnew
nmap tn :tabnext<CR>
nmap tl :tabnext<CR>
nmap tp :tabpre<CR>
nmap th :tabpre<CR>
"quit
nmap qq :q!
nmap qw :wq
nmap fn :lnext<CR>
nmap fp :lprevious<CR>
"about plugin
map <F2> :NERDTreeToggle<CR>
map <F3> :TagbarToggle<CR>
"map <F4> :SyntasticToggleMode<CR>
map <F4> :YcmDiags<CR>
"map <F4> :GundoToggle<CR>
"map <F7> :RainbowParenthesesToggleAll<CR> "conflict with folder
"map <F8> :Tsh<CR>
"------------------------------------
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
Plugin 'gmarik/Vundle.vim'
Plugin 'jrosiek/vim-mark'           "new generation's marks
Plugin 'godlygeek/tabular'          "auto align
Plugin 'mhinz/vim-signify'          "show git/svn status on column
Plugin 'majutsushi/tagbar'          "new generation of taglist
Plugin 'easymotion/vim-easymotion'  "a revolutional moving cursor plugin
Plugin 'vim-scripts/matchit.zip'    "easy jump in the xml , html
Plugin 'rking/ag.vim'               "code searcher, silver_searcher_ag
Plugin 'drmingdrmer/xptemplate'     "c-autocomplete
Plugin 'scrooloose/nerdcommenter'   "commenter
Plugin 'vim-scripts/gtags.vim'
Plugin 'hari-rangarajan/CCTree'
"Plugin 'sjl/gundo.vim'       "undo tree
"Plugin 'tpope/vim-surround'  "powerful edit tags for xsl
"vision----------------------------------------------------
Plugin 'bling/vim-airline'
Plugin 'Yggdroot/indentLine'        "show vertical indent line
Plugin 'vim-scripts/ShowTrailingWhitespace' "view trailing blank-space
Plugin 'kien/ctrlp.vim'             "ctrl-p, file searcher
Plugin 'scrooloose/nerdtree'        "tree file browser
"----------------------------------------------------------
"auto complete advanced------------------------------------
"neocomplete > neocomplecache > deoplete > ncm > ncm2
"Plugin 'Valloric/YouCompleteMe'    "conflict with ncm2
"---------------------------------------------------------
"syntax
"Plugin 'vim-scripts/DrawIt'             "syntax for asciio
"Plugin 'tikhomirov/vim-glsl'            "syntax for glsl
"Plugin 'djoshea/vim-matlab'             "matlab syntax
"Plugin 'djoshea/vim-matlab-fold'        "matlab folder
"Plugin 'fatih/vim-go'                   "go, syntax
"Plugin 'peterhoeg/vim-qml'              "qml, syntax
"Plugin 'vhda/verilog_systemverilog.vim' "verilog
"Plugin 'mattn/emmet-vim'                "html css plugin,
"Plugin 'pangloss/vim-javascript'        "modern javascript syntax
"Plugin 'thisivan/vim-matchit'           "html css
"Plugin 'othree/xml.vim'                 "auto edit tags for xml
"Plugin 'othree/html5.vim'               "html5 powerful plugin
"Plugin 'chrisbra/csv.vim'               "csv plugin
"---------------------------------------------------------
call vundle#end()
"NERDTree
let g:NERDTreeShowBookMarks=1
"indentLine vertical
let g:indentLine_color_term=900
let g:indentLine_color_dark=1
let g:indentLine_setConceal=0 " avoid hide double qoute for json
"for mark, a powerful mark plugin
let mapleader=";"
"ag.vim, to search from project root instead of the cwd
let g:ag_working_path_mode="r"
" xml.vim, a powerful xml plugin
let g:xml_syntax_folding=1
let g:xml_namespace_transparent=1
"tabular, a auto align plugin
let g:tabular_loaded=1
" statusline
let g:Powerline_loaded=0
let g:airline#extensions#quickfix_text='Quickfix'
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#tab_nr_type=1
let g:airline#extensions#branch#empty_message=''
let g:airline#extensions#branch#enablded=1
let g:airline#extensions#syntastic#enabled=1
let g:airline#extensions#tagbar#enabled=1
let g:airline#extensions#csv#enabled=1
let g:airline#extensions#csv#column_display='Name'
let g:airline#extensions#hunks#enabled=1
let g:airline#extensions#whitespace#enabled=0
let g:airline#extensions#whitespace#symbol='!'
"vim-signify
let g:signify_line_highligth=1
let g:signify_vcs_list=['git', 'hg', 'svn', 'cvs']
" matchit, easy jump in html xml
let loaded_matchit=1
" emmet html plugin
let g:user_emmet_leader_key='..'
let g:user_emmet_install_global=1
"othree/html5 html5 syntax and omnifunc
let g:html5_event_handler_attributes_complete = 0
let g:html5_rdfa_attributes_complete = 0
let g:html5_microdata_attributes_complete = 0
let g:html5_aria_attributes_complete = 0
" pnagloss/vim-javascript
let g:javascript_plugin_jsdoc = 1
let g:javascript_plugin_ngdoc = 1
let g:javascript_plugin_flow = 1
"html indent
let g:html_indent_script1="auto"
let g:html_indent_style1="auto"
let g:html_indent_inctags = "html,body,head,tbody"
"xptemplate
let g:xptemplate_brace_complete='}'
let g:xptemplate_break_undo=1
let g:xptemplate_key=',,'
"let g:xptemplate_goback=',,'
let g:xptemplate_nav_next='`'
let g:xptemplate_nav_cancel='<C-c>'
highlight XPTcurrentPH gui=none guibg=blue

let g:molokai_original=1

"auto complete ---------------------------------
let g:ycm_confirm_extra_conf=1
let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'
let g:ycm_add_preview_to_completeopt=0
let g:ycm_seed_identifiers_with_syntax=1
let g:ycm_min_num_of_chars_for_completion=2
let g:ycm_collect_identifiers_from_comments_and_strings=1
let g:ycm_complete_in_comments=1
let g:ycm_complete_in_strings=1
let g:ycm_goto_buffer_command='new-or-existing-tab'
let g:ycm_key_invoke_completion='C-n'
set completeopt=menu,menuone
let g:ycm_semantic_triggers =  {
            \ 'c,cpp,python,java,go,erlang,perl,cs,lua,javascript': ['re!\w{2}'],
            \ }
map gd :YcmCompleter GoToDefinitionElseDeclaration<CR>
"nnoremap gk :YcmCompleter GoToDeclaration<CR>
"nnoremap gj :YcmCompleter GoToDefinition<CR>
"-----------------------------------------------
"python
let g:jedi#force_py_version=3
"csv filetype
augroup filetypedetect
  au! BufRead,BufNewFile *.csv,*.dat setfiletype csv
augroup END
"detect glsl (opengl shader language)
autocmd! BufNewFile,BufRead *.glsl,*.vs,*.fs set ft=glsl
"# strange filetype foldmethod set to `indent' instead of syntax
"autocmd FileType html,xhtml,xml,javascript setlocal foldmethod=indent
"autocmd FileType verilog setlocal foldmethod=indent
"autocmd FileType python setlocal foldmethod=indent

"F5 for compile
augroup hotkey_compile
    autocmd FileType c map <F5>
                \ <ESc>
                \ :w<CR>
                \ :!gcc % -std=gnu99 -g -o %< -lm
                \ && echo -e "whether run ? [Ctrl-c to cancel]\c"
                \ && read && ./%< <CR>

    autocmd FileType cpp map <F5>
                \ <ESc>
                \ :w<CR>
                \ :!g++ % -std=c++11 -g -o %< -lm
                \ && echo -e "whether run ? [Ctrl-c to cancel]\c"
                \ && read && ./%< <CR>
    autocmd FileType python map <F5>
                \ <ESc>
                \ :w<CR>
                \ :!echo "script saved"
                \ && echo -e "whether run ? [Ctrl-c to cancel]\c"
                \ && read && python3 % <CR>
augroup END
